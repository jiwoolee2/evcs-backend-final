<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.example.evcs.news.model.dao.NewsMapper">
  
	<select id="findByTitleAndUrl" 
			parameterType="com.example.evcs.news.model.dto.NewsDTO" 
			resultType="com.example.evcs.news.model.dto.NewsDTO">
	    SELECT n.NEWS_NO as newsNo,
	           n.NEWS_TITLE as title,
	           n.NEWS_ORIGIN_URL as originUrl,
	           n.NEWS_DESCRIPTION as description,
	           n.NEWS_NAVER_DATE as pubDate,
	           c.NEWS_CATEGORY as query,
	           i.NEWS_IMG_URL as imageUrl,
	           n.NEWS_WATCHED as count,
	           n.NEWS_STATUS as newsStatus 
	    FROM EV_NEWS n
	    LEFT JOIN EV_NEWS_IMG i ON n.NEWS_NO = i.NEWS_NO
	    JOIN EV_NEWS_CATEGORY c ON n.NEWS_CATEGORY_NO = c.NEWS_CATEGORY_NO
	    WHERE n.NEWS_TITLE = #{title} 
	      AND n.NEWS_ORIGIN_URL = #{originUrl}
	      AND n.NEWS_STATUS = 'Y'
	</select>
	
	<insert id="insert"         
		parameterType="com.example.evcs.news.model.dto.NewsDTO">
			INSERT INTO EV_NEWS (
			  NEWS_NO,
			  NEWS_CATEGORY_NO,
			  NEWS_TITLE,
			  NEWS_DESCRIPTION,
			  NEWS_ORIGIN_URL,
			  NEWS_NAVER_DATE,
			  NEWS_ENROLLDATE,
			  NEWS_STATUS,
			  NEWS_WATCHED
			)
			VALUES (
			  NEWS_SEQ.NEXTVAL,
			  NVL(
		      (SELECT NEWS_CATEGORY_NO 
		       FROM EV_NEWS_CATEGORY 
		       WHERE NEWS_CATEGORY = #{query}
		       FETCH FIRST 1 ROWS ONLY),
		      61
		      ),
			  #{title},
			  #{description},
			  #{originUrl},
			  TO_DATE(#{pubDate}, 'YYYY. MM. DD.'),
			  SYSDATE,
			  'Y',
			  0
			)
	</insert>
	
	<insert id="imageInsert" parameterType="map">
	  INSERT INTO EV_NEWS_IMG (
	    NEWS_NO, NEWS_IMG_URL
	  )
	  VALUES (
	    #{newsNo}, #{imageUrl}
	  )
	</insert>

	
	<select id="getLastInsertId" resultType="Long">
	    SELECT NEWS_SEQ.CURRVAL FROM DUAL
	</select>
	
	<update id="incrementWatchCount" parameterType="long">
	    UPDATE EV_NEWS
	    SET NEWS_WATCHED = NEWS_WATCHED + 1
	    WHERE NEWS_NO = #{newsNo}
	</update>
	
	<select id="findByNewsNo" resultType="com.example.evcs.news.model.dto.NewsDTO">
	  SELECT n.NEWS_NO as newsNo,
	         n.NEWS_TITLE as title,
	         n.NEWS_ORIGIN_URL as originUrl,
	         n.NEWS_DESCRIPTION as description,
	         n.NEWS_NAVER_DATE as pubDate,
	         c.NEWS_CATEGORY as query,
	         i.NEWS_IMG_URL as imageUrl,
	         n.NEWS_WATCHED as count,
	         n.NEWS_STATUS as newsStatus 
	  FROM EV_NEWS n
	  LEFT JOIN EV_NEWS_IMG i ON n.NEWS_NO = i.NEWS_NO
	  JOIN EV_NEWS_CATEGORY c ON n.NEWS_CATEGORY_NO = c.NEWS_CATEGORY_NO
	  WHERE n.NEWS_NO = #{newsNo}
	</select>


	<update id="softDeleteByNewsNo" parameterType="long">
	  UPDATE EV_NEWS
	  SET NEWS_STATUS = 'N'
	  WHERE NEWS_NO = #{newsNo}
	</update>
	  
	  
	<select id="findByTitleAndUrlAll"
          parameterType="map"
          resultType="com.example.evcs.news.model.dto.NewsDTO">
    SELECT n.NEWS_NO    AS newsNo,
           n.NEWS_TITLE AS title,
           n.NEWS_ORIGIN_URL AS originUrl,
           n.NEWS_DESCRIPTION AS description,
           n.NEWS_NAVER_DATE  AS pubDate,
           c.NEWS_CATEGORY    AS query,
           i.NEWS_IMG_URL     AS imageUrl,
           n.NEWS_WATCHED     AS count,
           n.NEWS_STATUS      AS newsStatus
      FROM EV_NEWS n
      LEFT JOIN EV_NEWS_IMG  i ON n.NEWS_NO = i.NEWS_NO
      JOIN EV_NEWS_CATEGORY c ON n.NEWS_CATEGORY_NO = c.NEWS_CATEGORY_NO
     WHERE n.NEWS_TITLE      = #{title}
       AND n.NEWS_ORIGIN_URL = #{originUrl}
  </select>
  
  </mapper>
  
  