<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.evcs.admin.rentCarInfo.model.dao.RentCarInfoMapper">
	
	<select id="getRentCarCategory"
				resultType="CategoryDTO">
		SELECT
				  CATEGORY_NAME categoryName
				, CATEGORY_NO categoryNo
		  FROM
		  		EV_CATEGORY
	</select>
	
	<select id="getCompanyInfo"
				resultType="CarCompanyDTO">
		SELECT
				  COMPANY_NAME companyName
				, COMPANY_NO companyNo
		  FROM
		  		EV_CAR_COMPANY
	</select>
	
	<select id="getCarTypeInfo"
				resultType="CarTypeDTO">
		SELECT
				  CAR_TYPE_NAME carTypeName
				, CAR_TYPE_NO carTypeNo
		  FROM
		  		EV_CAR_TYPE
	</select>

	<select id="getAllCarInfo"
				resultType="CarInfoDTO">
		SELECT
				  CI.CAR_NO carNo
				, CI.CAR_NAME carName
				, CI.CAR_YEAR carYear
				, CI.CAR_BATTERY carBattery
				, CC.COMPANY_NO companyNo
				, CC.COMPANY_NAME companyName
				, CT.CAR_TYPE_NO carTypeNo
				, CT.CAR_TYPE_NAME carTypeName
				, ENROLL_DATE enrollDate
		  FROM
		  		EV_CAR_INFO CI
		  LEFT JOIN 
		  		EV_CAR_COMPANY CC ON (CI.COMPANY_NO = CC.COMPANY_NO)
		  LEFT JOIN
		  		EV_CAR_TYPE CT ON (CI.CAR_TYPE_NO = CT.CAR_TYPE_NO)
	</select>	
	
	<select id="findByCarNo"
				parameterType="int"
				resultType="int">
		SELECT 
				COUNT(*)	   
	  	  FROM
	  	 		EV_CAR_INFO
	  	 WHERE
	  	 		CAR_NO = #{carNo}
	</select>
	
	<select id="findCategoryNoByCategoryName"
				parameterType="String"	
				resultType="int">
		SELECT
				CATEGORY_NO
		  FROM
		  		EV_CATEGORY
		 WHERE
		 		CATEGORY_NO = #{categoryNo}
	</select>
	
	<insert id="insertRentCar"
				parameterType="RentCarInfoVo">
		INSERT 
		  INTO 
	  			EV_RENT_CAR_INFO(
				    RENT_CAR_NO
				  , CATEGORY_NO
				  , CAR_NO
				  , RENT_CAR_PRICE
				  , GARAGE_NO
				  , ENROLL_DATE
				  , STATUS
				)
	  			VALUES(
				    #{rentCarNo}
				  , #{categoryNo}
				  , #{carNo}
				  , #{rentCarPrice}
				  , #{garageNo}
				  , SYSDATE
				  , 'Y'
				)
	</insert>
	
	<insert id="insertCarOptions" parameterType="map">
	  INSERT INTO EV_CAR_OPTION (RENT_CAR_NO, OPTION_NO)
	  <foreach collection="optionNos" item="optionNo" separator="UNION ALL">
	    SELECT #{rentCarNo}, #{optionNo} FROM DUAL
	  </foreach>
	</insert>

	<select id="countAllRentCar"
				resultType="int">
		SELECT
			   COUNT(*)
		  FROM
		  	   EV_RENT_CAR_INFO E1
		  JOIN
		  	   EV_CATEGORY E2 ON (E1.CATEGORY_NO = E2.CATEGORY_NO)
	 	  JOIN
  		       EV_GARAGE G ON (G.GARAGE_NO = E1.GARAGE_NO)
  		  WHERE 1=1
   			  <if test="'ing'.equals(useStatus)">
			  	AND E1.STATUS = 'Y'
			  </if>
			  <if test="'noIng'.equals(useStatus)">
			  	AND E1.STATUS = 'N'
			  </if>
			  <choose>
			  	<when test="'allAddress'.equals(category)">
			  		AND G.ALL_ADDRESS LIKE '%' || #{searchKeyword} || '%'
			  	</when>
			  	<when test="'postAdd'.equals(category)">
			  		AND G.POST_ADD LIKE '%' || #{searchKeyword} || '%'
			  	</when>
			  	<when test="'carNo'.equals(category)">
			  		AND E1.RENT_CAR_NO LIKE '%' || #{searchKeyword} || '%'
			  	</when>
			  </choose>
	</select>
	

	<select id="getRentCarList"
				parameterType="map"
				resultType="RentCarInfoDTO">
		SELECT
			   		E1.RENT_CAR_NO rentCarNo
				  , E2.CATEGORY_NAME categoryName
				  , E1.CAR_NO carNo
				  , E1.RENT_CAR_PRICE rentCarPrice
				  , G.ALL_ADDRESS enrollPlace
  				  , G.POST_ADD postAdd
  				  , G.GARAGE_NO garageNo
				  , E1.ENROLL_DATE enrollDate
				  , E1.STATUS status
				  , CASE 
						WHEN E1.STATUS = 'Y' THEN '사용중'
						WHEN E1.STATUS = 'N' THEN '사용불가'
						ELSE '알수없음'
			  		END AS statusName
			  	  , (SELECT FILE_LOAD FROM EV_CAR_IMAGE I1 WHERE I1.CAR_NO = E1.CAR_NO) fileLoad
			  	  , E1.CATEGORY_NO categoryNo
			  	  , CASE 
			            WHEN EXISTS (
			                SELECT 1 
			                FROM EV_RESERVATION_LIST RL 
			                WHERE RL.RENT_CAR_NO = E1.RENT_CAR_NO 
			                AND SYSDATE BETWEEN RL.RENTAL_TIME AND RL.RETURN_TIME
			            ) THEN '가용중'
			            ELSE '가용 가능'
			        END AS reserStatus
		  FROM
		  	   EV_RENT_CAR_INFO E1
		  JOIN
		  	   EV_CATEGORY E2 ON (E1.CATEGORY_NO = E2.CATEGORY_NO)
	 	  JOIN
  		       EV_GARAGE G ON (G.GARAGE_NO = E1.GARAGE_NO)
  		 WHERE 1=1
			  <if test="'ing'.equals(useStatus)">
			  	AND E1.STATUS = 'Y'
			  </if>
			  <if test="'noIng'.equals(useStatus)">
			  	AND E1.STATUS = 'N'
			  </if>
			  <choose>
			  	<when test="'allAddress'.equals(category)">
			  		AND G.ALL_ADDRESS LIKE '%' || #{searchKeyword} || '%'
			  	</when>
			  	<when test="'postAdd'.equals(category)">
			  		AND G.POST_ADD LIKE '%' || #{searchKeyword} || '%'
			  	</when>
			  	<when test="'carNo'.equals(category)">
			  		AND E1.RENT_CAR_NO LIKE '%' || #{searchKeyword} || '%'
			  	</when>
			  </choose>
		 ORDER
		 	BY
		 		E1.ENROLL_DATE DESC
	</select>
	
	<select id="getCarList"
				resultType="CarInfoDTO">
		SELECT
					E1.CAR_NO carNo
			   	  , E1.CAR_NAME carName
				  , E1.CAR_YEAR carYear
				  , CC.COMPANY_NAME carCompany
				  , CT.CAR_TYPE_NAME carType
				  , E1.CAR_BATTERY carBattery
		  FROM
		  	   EV_CAR_INFO E1
		  JOIN
		  	   EV_RENT_CAR_INFO E2 ON (E1.CAR_NO = E2.CAR_NO)
		  LEFT JOIN
		  	   EV_CAR_TYPE CT ON (E1.CAR_TYPE_NO = CT.CAR_TYPE_NO)
		  LEFT JOIN
		  	   EV_CAR_COMPANY CC ON (E1.COMPANY_NO = CC.COMPANY_NO)
		 ORDER
		 	BY
		 		E2.ENROLL_DATE DESC
	</select>
	
	
	<select id="findByRentCarNo"
				parameterType="String"
				resultType="int">
		SELECT 
				COUNT(*)	   
	  	  FROM
	  	 		EV_RENT_CAR_INFO
	  	 WHERE
	  	 		RENT_CAR_NO = #{rentCarNo}
	</select>
	
	<update id="updateRentCar"
				parameterType = "RentCarInfoVO">
		UPDATE
				EV_RENT_CAR_INFO
		   SET 
		   		  CATEGORY_NO = #{categoryNo}
		   		, RENT_CAR_PRICE = #{rentCarPrice}
		   		, GARAGE_NO = #{garageNo}
		   		, STATUS = #{status}
		 WHERE
		  		RENT_CAR_NO = #{rentCarNo}
	</update>
	
	<delete id="deleteRentCar"
				parameterType = "String">
		UPDATE 
				EV_RENT_CAR_INFO
			SET
				STATUS = 'N'
		WHERE 
			RENT_CAR_NO = #{ rentCarNo }
	</delete>

	<select id="getTimeRentCarInfo" resultType="RentCarInfoDTO">
	  SELECT
		      RC.RENT_CAR_NO         AS rentCarNo,
		      RC.RENT_CAR_PRICE      AS rentCarPrice,
		      RC.CAR_NO              AS carNo,
		      RC.ENROLL_DATE         AS enrollDate,
		      RC.STATUS              AS status,
		      G.GARAGE_NO            AS garageNo,
		      G.ALL_ADDRESS          AS enrollPlace,
		      G.ADDRESS          	 AS address,
		      G.POST_ADD             AS postAdd,
		      CG.CATEGORY_NAME       AS categoryName,
		      -- 차량 정보
		      CI.COLOR_NO            AS colorNo,
		      CI.CAR_NAME            AS carName,
		      CI.CAR_YEAR            AS carYear,
		      CI.CAR_BATTERY         AS carBattery,
		      CT.CAR_TYPE_NAME       AS carTypeName,
		      CC.COMPANY_NAME        AS companyName,
		      -- 이미지 서브쿼리
		      (SELECT FILE_LOAD 
		       FROM EV_CAR_IMAGE I1 
		       WHERE I1.CAR_NO = RC.CAR_NO AND ROWNUM = 1) AS fileLoad
	  FROM
		      EV_RENT_CAR_INFO RC
	  JOIN 	  EV_CAR_INFO CI ON CI.CAR_NO = RC.CAR_NO
	  JOIN    EV_CAR_TYPE CT ON CT.CAR_TYPE_NO = CI.CAR_TYPE_NO
	  JOIN    EV_CAR_COMPANY CC ON CC.COMPANY_NO = CI.COMPANY_NO
	  JOIN    EV_CATEGORY CG ON CG.CATEGORY_NO = RC.CATEGORY_NO
	  JOIN    EV_GARAGE G ON G.GARAGE_NO = RC.GARAGE_NO
	  WHERE
		      RC.CATEGORY_NO = 1
		      AND RC.STATUS = 'Y'
	  ORDER 
	     BY
	     	  RC.CAR_NO DESC
	</select>

	<select id="getOptions"
			resultType="RentCarOptionDTO"
	>
		SELECT 
			  OPTION_NO optionNo
			, OPTION_NAME optionName
		FROM 
			EV_OPTION
	</select>
	
	<select id="getOptionListByRentCarNo" 
			parameterType="string" 
			resultType="RentCarOptionDTO"
	>
	  SELECT 
	  	  O.OPTION_NO
	  	, O.OPTION_NAME
	  FROM 
	  	EV_CAR_OPTION CO
	  JOIN 
	  	EV_OPTION O ON CO.OPTION_NO = O.OPTION_NO
	  WHERE 
	  	CO.RENT_CAR_NO = #{rentCarNo}
	</select>
	
	<select id="getRentCarOptions" 
			parameterType="string"
			resultType="RentCarOptionDTO" 
	>
	  SELECT
	    	  O.OPTION_NO AS optionNo
	    	, O.OPTION_NAME AS optionName
	  FROM
	    EV_CAR_OPTION CO
	  JOIN
	    EV_OPTION O ON CO.OPTION_NO = O.OPTION_NO
	  WHERE
	    CO.RENT_CAR_NO = #{rentCarNo}
	</select>
	
	<delete id="deleteCarOptions" 
			parameterType="string"
	>
    	DELETE 
    		FROM 
				EV_CAR_OPTION 
		WHERE 
			RENT_CAR_NO = #{rentCarNo}
	</delete>
	
</mapper>
