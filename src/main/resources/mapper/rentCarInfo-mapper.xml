<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.evcs.admin.rentCarInfo.model.dao.RentCarInfoMapper">
	

	
	<select id="getRentCarCategory"
				resultType="String">
		SELECT
				CATEGORY_NAME
		  FROM
		  		EV_CATEGORY
	</select>

	<select id="getAllCarInfo"
				resultType="CarInfoDTO">
		SELECT
				  CAR_NO carNo
				, CAR_NAME carName
				, CAR_TYPE carType
				, CAR_YEAR carYear
				, CAR_COMPANY carCompany
				, CAR_BATTERY carBattery
				, ENROLL_DATE enrollDate
		  FROM
		  		EV_CAR_INFO
	</select>	
	
	
		
	<select id="findByCarNo"
				parameterType="int"
				resultType="int">
		SELECT 
				COUNT(*)	   
	  	  FROM
	  	 		EV_CAR_INFO
	  	 WHERE
	  	 		CAR_NO = #{carNo}
	</select>
	
	<select id="findCategoryNoByCategoryName"
				parameterType="String"	
				resultType="int">
		SELECT
				CATEGORY_NO
		  FROM
		  		EV_CATEGORY
		 WHERE
		 		CATEGORY_NAME = #{categoryName}
	</select>
	
	<insert id="insertRentCar"
				parameterType="RentCarInfoVo">
		INSERT 
		  INTO 
	  			EV_RENT_CAR_INFO(
				    RENT_CAR_NO
				  , CATEGORY_NO
				  , CAR_NO
				  , RENT_CAR_PRICE
				  , GARAGE_NO
				)
	  			VALUES(
				    #{rentCarNo}
				  , #{categoryNo}
				  , #{carNo}
				  , #{rentCarPrice}
				  , #{garageNo}
				)
	</insert>

	<select id="countAllRentCar"
				resultType="int">
		SELECT
			   COUNT(*)
		  FROM
		  	   EV_RENT_CAR_INFO
	</select>
	
	<select id="getRentCarList"
				parameterType="map"
				resultType="RentCarInfoDTO">
		SELECT
			   		E1.RENT_CAR_NO rentCarNo
				  , E2.CATEGORY_NAME categoryName
				  , E1.CAR_NO carNo
				  , E1.RENT_CAR_PRICE rentCarPrice
				  , G.ALL_ADDRESS enrollPlace
  				  , G.POST_ADD postAdd
  				  , G.GARAGE_NO garageNo
				  , E1.ENROLL_DATE enrollDate
				  , E1.STATUS status
				  , CASE 
						WHEN E1.STATUS = 'Y' THEN '사용중'
						WHEN E1.STATUS = 'N' THEN '사용불가'
						ELSE '알수없음'
			  		END AS statusName
		  FROM
		  	   EV_RENT_CAR_INFO E1
		  JOIN
		  	   EV_CATEGORY E2 ON (E1.CATEGORY_NO = E2.CATEGORY_NO)
	 	  JOIN
  		       EV_GARAGE G ON (G.GARAGE_NO = E1.GARAGE_NO)
  		 WHERE 1=1
			  <if test="'ing'.equals(useStatus)">
			  	AND E1.STATUS = 'Y'
			  </if>
			  <if test="'noIng'.equals(useStatus)">
			  	AND E1.STATUS = 'N'
			  </if>
			  <choose>
			  	<when test="'allAddress'.equals(category)">
			  		AND G.ALL_ADDRESS LIKE '%' || #{searchKeyword} || '%'
			  	</when>
			  	<when test="'postAdd'.equals(category)">
			  		AND G.POST_ADD LIKE '%' || #{searchKeyword} || '%'
			  	</when>
			  	<when test="'carNo'.equals(category)">
			  		AND E1.RENT_CAR_NO LIKE '%' || #{searchKeyword} || '%'
			  	</when>
			  </choose>
		 ORDER
		 	BY
		 		E1.ENROLL_DATE DESC
	</select>
	
	<select id="getCarList"
				resultType="CarInfoDTO">
		SELECT
					E1.CAR_NO carNo
			   	  , E1.CAR_NAME carName
				  , E1.CAR_TYPE carType
				  , E1.CAR_YEAR carYear
				  , E1.CAR_COMPANY carCompany
				  , E1.CAR_BATTERY carBattery
		  FROM
		  	   EV_CAR_INFO E1
		  JOIN
		  	   EV_RENT_CAR_INFO E2 ON (E1.CAR_NO = E2.CAR_NO)
		 ORDER
		 	BY
		 		E2.ENROLL_DATE DESC
	</select>
	
	<select id="findByRentCarNo"
				parameterType="String"
				resultType="int">
		SELECT 
				COUNT(*)	   
	  	  FROM
	  	 		EV_RENT_CAR_INFO
	  	 WHERE
	  	 		RENT_CAR_NO = #{rentCarNo}
	</select>
	
	<update id="updateRentCar"
				parameterType = "RentCarInfoVO">
		UPDATE
				EV_RENT_CAR_INFO
		   SET 
		   		  CATEGORY_NO = #{categoryNo}
		   		, RENT_CAR_PRICE = #{rentCarPrice}
		   		, GARAGE_NO = #{garageNo}
		   		, STATUS = #{status}
		 WHERE
		  		RENT_CAR_NO = #{rentCarNo}
	</update>
	
	<delete id="deleteRentCar"
				parameterType = "String">
		UPDATE 
				EV_RENT_CAR_INFO
			SET
				STATUS = 'N'
		WHERE 
			RENT_CAR_NO = #{ rentCarNo }
	</delete>
	
	
	<select id="getTimeRentCarInfo"
				resultType="RentCarInfoDTO">
		SELECT
				    CI.RENT_CAR_NO rentCarNo
				  , CG.CATEGORY_NAME categoryName
				  , CI.CAR_NO carNo
				  , CI.RENT_CAR_PRICE rentCarPrice
				  , G.ALL_ADDRESS enrollPlace
				  , G.POST_ADD postAdd
				  , G.GARAGE_NO garageNo
				  , G.ADDRESS address
				  , CI.ENROLL_DATE enrollDate
				  , CI.STATUS status
				  , (SELECT FILE_LOAD FROM EV_CAR_IMAGE I1 
				  WHERE CI.CAR_NO = I1.CAR_NO) fileLoad
		  FROM
		  		EV_RENT_CAR_INFO CI
		  JOIN
		  		EV_CATEGORY CG ON (CG.CATEGORY_NO = CI.CATEGORY_NO)
		  JOIN
		  		EV_GARAGE G ON (G.GARAGE_NO = CI.GARAGE_NO)
		 WHERE
		 		CI.CATEGORY_NO = 1
		  AND
		  		CI.STATUS = 'Y'
         ORDER
		 	BY
		 	   	CI.CAR_NO DESC 
	</select>	
	
	
	<select id="getCarInfoByCategoryNo"
				resultType="CarInfoDTO">
		SELECT
			    E1.CAR_NO  carNo,
		        E1.CAR_NAME  carName,
		        E1.CAR_YEAR  carYear,
		        E1.CAR_BATTERY  carBattery,
		        E1.ENROLL_DATE  enrollDate,
		        CC.COMPANY_NAME  carCompany,
		        CT.CAR_TYPE_NAME  carType
		  FROM
		  	    EV_CAR_INFO E1
		  JOIN
		  		EV_RENT_CAR_INFO E2 ON (E1.CAR_NO = E2.CAR_NO)
		  LEFT JOIN EV_CAR_TYPE CT ON (E1.CAR_TYPE_NO = CT.CAR_TYPE_NO)
		  LEFT JOIN EV_CAR_COMPANY CC ON (E1.COMPANY_NO = CC.COMPANY_NO)
		 WHERE
		 		E2.CATEGORY_NO = 1
		  AND
		  		E2.STATUS = 'Y'
		 ORDER
		 	BY
		 	   	E1.CAR_NO DESC 
		</select>

	
</mapper>










