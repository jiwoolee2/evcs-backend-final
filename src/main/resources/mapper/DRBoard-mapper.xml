<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.evcs.driveRoute.model.dao.DRBoardMapper">
	

	<insert id="insertBoard"
				parameterType = "DRBoardVo">
				
		<selectKey keyProperty="boardNo" order="AFTER" resultType="Long"> 
			SELECT 
					BOARD_NO boardNo 
			  FROM		
					(SELECT 
							BOARD_NO
					   FROM 
					  		EV_DRIVE_ROUTE_BOARD
					  ORDER
					     BY
					    	BOARD_NO DESC)
			 WHERE
			 		ROWNUM = 1
		</selectKey>
		
		INSERT
		  INTO
		  		EV_DRIVE_ROUTE_BOARD(
					  BOARD_WRITER 
					, BOARD_CONTENT 
				)
		  		VALUES(
					  #{boardWriter}
					, #{boardContent}
				)
	</insert>
	
	<insert id="insertBoardFile"
				parameterType="DRBoardVo">
		INSERT
		  INTO	
		  		EV_BOARD_IMAGE(
					  BOARD_NO
					, BOARD_IMAGE
				)
		  		VALUES(
					  #{boardNo}
					, #{boardImage}
				)
	</insert>
	
	<insert id="insertDriveRouteFile"
				parameterType="DRBoardVo">
		INSERT
		  INTO	
		  		EV_DRIVE_ROUTE_IMAGE(
					  BOARD_NO
					, DRIVE_ROUTE_IMAGE
				)
		  		VALUES(
					  #{boardNo}
					, #{driveRouteImage}
				)
	</insert>
	
	<resultMap id="DRBoardMap" type="DRBoardDTO">
		<id property="boardNo" column="boardNo"/>
		<result property="boardWriter" column="boardWriter"/>
		<result property="boardContent" column="boardContent"/>
		<result property="createDate" column="createDate"/>
		<result property="status" column="status"/>
		<result property="memberNickName" column="memberNickName"/>
		<result property="likesCount" column="likesCount"/>
		
		<association property="driveRouteImage" javaType="DriveRouteImageDTO">
			<id property="boardNo" column="boardNo"/>
			<result property="driveRouteImage" column="driveRouteImage"/>
		</association>
	
		<collection property="drBoardImage" ofType="DRBoardImageDTO" javaType="List">
			<id property="boardImageNo" column="boardImageNo"/>
			<result property="boardNo" column="boardNo"/>
			<result property="boardImage" column="boardImage"/>
		</collection>
		
	</resultMap>
	
	<select id="getAllBoard"
				resultMap="DRBoardMap">
		SELECT
				  DR.BOARD_NO boardNo
				, DR.BOARD_WRITER boardWriter
				, DR.BOARD_CONTENT boardContent
				, BI.BOARD_IMAGE  boardImage
				, BI.BOARD_IMAGE_NO  boardImageNo
				, DR.CREATE_DATE createDate
				, DR.STATUS status
				, DI.DRIVE_ROUTE_IMAGE driveRouteImage
				, EM.MEMBER_NICKNAME memberNickName
				, BL.likesCount likesCount
		  FROM
		  		EV_DRIVE_ROUTE_BOARD DR
		  JOIN
		  		EV_MEMBER EM ON (EM.MEMBER_NO = DR.BOARD_WRITER)
		  JOIN
		  		EV_DRIVE_ROUTE_IMAGE DI ON (DI.BOARD_NO = DR.BOARD_NO)
	 LEFT JOIN
	      		EV_BOARD_IMAGE BI ON BI.BOARD_NO = DR.BOARD_NO
	 LEFT JOIN
	            (SELECT BOARD_NO, COUNT(*) AS likesCount FROM EV_BOARD_LIKES
	             GROUP BY BOARD_NO) BL ON (BL.BOARD_NO = DR.BOARD_NO)
		 WHERE
		 		DR.STATUS = 'Y'	
		 ORDER
		    BY
		    	DR.BOARD_NO DESC
	</select>
	
	<select id="countBoardByBoardNo"
				parameterType="Long"
				resultType="int">
		SELECT
				COUNT(*)
		  FROM
		  		EV_DRIVE_ROUTE_BOARD
		 WHERE
		 		BOARD_NO = #{boardNo}
	
	</select>
	
	<update id="updateBoard"
				parameterType="DRBoardVo">
		UPDATE
				EV_DRIVE_ROUTE_BOARD
		   SET
		   		BOARD_CONTENT = #{boardContent}
		 WHERE
		 		BOARD_NO = #{boardNo}
	</update>
	
	<update id="deleteBoard"
				parameterType="Long">
		UPDATE
				EV_DRIVE_ROUTE_BOARD
		   SET
		   		STATUS = 'N'
		 WHERE
		 		BOARD_NO = #{boardNo}
	</update>
	
	
	<delete id="delteDriveRouteUrl"
	            parameterType="Long">
		DELETE
		  FROM
		       EV_DRIVE_ROUTE_IMAGE
		 WHERE
		       BOARD_NO = #{boardNo}
	</delete>
	
	<delete id="deleteBoardUrl"
	            parameterType="Long">
		DELETE
		  FROM
		       EV_BOARD_IMAGE
		 WHERE
		       BOARD_NO = #{boardNo}
	</delete>
	
	<select id="getBoardImageUrl"
				parameterType="Long"
				resultType="String">
		SELECT
				BOARD_IMAGE
		  FROM
		  	    EV_BOARD_IMAGE
		 WHERE
		 		BOARD_NO = #{boardNo}
	</select>
	
	<select id="getDriveRouteImageUrl"
				parameterType="Long"
				resultType="String">
		SELECT
				DRIVE_ROUTE_IMAGE
		  FROM
		  	    EV_DRIVE_ROUTE_IMAGE
		 WHERE
		 		BOARD_NO = #{boardNo}
	</select>
	
	<insert id="updateBoardFile">
		INSERT
		  INTO	
		  		EV_BOARD_IMAGE(
					  BOARD_NO
					, BOARD_IMAGE
				)
		  		VALUES(
					  #{boardNo}
					, #{boardImage}
				)	
	</insert>
	
	<update id="updateDriveRouteFile">
		UPDATE
				EV_DRIVE_ROUTE_IMAGE
		   SET
		   		DRIVE_ROUTE_IMAGE = #{driveRouteImage}
		 WHERE
		 		BOARD_NO = #{boardNo} 	
	</update>
	
	<insert id="boardLikes"
				parameterType="DRBoardVo">
		INSERT
		  INTO
		  		EV_BOARD_LIKES (BOARD_NO, MEMBER_NO)
		  		VALUES(
					  #{boardNo}
					, #{boardWriter}
				)
	</insert>
	
	<delete id="boardLikesCancel"
				parameterType="DRBoardVo">
		DELETE
		  FROM
		  		EV_BOARD_LIKES
		  WHERE
		  		BOARD_NO = #{boardNo}
		    AND
		    	MEMBER_NO = #{boardWriter}
	</delete>
	
	<select id="selectBoardLikes"
				parameterType="Long"
				resultType="DRBoardDTO">
		SELECT
				  EB.BOARD_NO boardNo
				, EM.MEMBER_NO boardWriter	
		  FROM
				EV_BOARD_LIKES EB
		  JOIN
		  		EV_DRIVE_ROUTE_BOARD DR ON (DR.BOARD_NO = EB.BOARD_NO)
		  JOIN
		  		EV_MEMBER EM ON (EM.MEMBER_NO = DR.BOARD_WRITER)	
		 WHERE
		 		DR.STATUS = 'Y'
		   AND
		   		EB.MEMBER_NO = #{boardWriter}		
		 ORDER
		 	BY
		 	    EB.BOARD_NO DESC
	</select>
</mapper>










